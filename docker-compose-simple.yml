# Simplified Docker Compose for FlowPlane Trading Platform
services:
  postgres:
    image: postgres:16
    container_name: flowplane-postgres
    environment:
      POSTGRES_DB: flowplane
      POSTGRES_USER: flowplane
      POSTGRES_PASSWORD: flowplane_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: flowplane-redis
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flowplane-backend
    environment:
      DATABASE_URL: postgresql://flowplane:flowplane_dev_password@postgres:5432/flowplane
      REDIS_URL: redis://redis:6379
      POLYGON_API_KEY: ${POLYGON_API_KEY}
      ALPACA_API_KEY: ${ALPACA_API_KEY}
      ALPACA_SECRET_KEY: ${ALPACA_SECRET_KEY}
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    image: node:20-alpine
    container_name: flowplane-frontend
    working_dir: /app
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_WS_URL: ws://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev"
    depends_on:
      - backend

volumes:
  postgres_data: